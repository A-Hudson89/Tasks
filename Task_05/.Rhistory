model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500,
ploidy = 2) + feat_mutation(10) +
feat_recombination(15) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Nloci <- length(stats$trees)
for(locus in 1:Nloci){
ntrees<- length(stats$trees[[locus]])
for(n in 1:ntrees) {
if(locus == 1 && n == 1){
outPhy <- read.tree(text=stats$trees[[locus]][n])
}
else {
outPhy <- ape:::c.phylo(outPhy, read.tree(text=stats$trees[[locus]][n]))
}
}
}
par(mfrow=c(1,1))
AllSNP1 <- densityTree(outPhy)
model3 <- coal_model(10,50)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
sumstat_nucleotide_div()
stats <- simulate(model3, nsim = 40)
mean_pi <- sapply(stats, function(x) mean(x$pi))
theta <- Sapply(stats, function(x) x$pars[["theta"]])
theta <- Sapply(stats, function(x) x$pars[["theta"]])
theta <- sapply(stats, function(x) x$pars[["theta"]])
plot(mean_pi,theta)
?plot
plot(mean_pi, theta)
plot(theta,mean_pi)
plot(mean_pi, y=theta)
plot(mean_pi, y=theta, type = "p", xlim=NULL, ylim=NULL, xlab="mean_pi", ylab="theta")
plot(mean_pi, y=theta, type = "p", xlim=NULL, ylim=NULL, xlab="mean_pi", ylab="theta")
plot(mean_pi, y=theta, type = "p", xlab="mean_pi", ylab="theta")
plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta")
mean_pi <- sapply(stats, function(x) mean(x$pi))
theta <- sapply(stats, function(x) x$pars[["theta"]])
plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta")
plot(mean_pi, theta, type = "b", xlab="mean_pi", ylab="theta")
plot(mean_pi, type = "p", xlab="mean_pi", ylab="theta")
plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta", color="red")
plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta")
mean_pi <- sapply(stats, function(x) mean(x$pi))
theta <- sapply(stats, function(x) x$pars[["theta"]])
plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta")
LineA <- rlm(mean_pi ~ theta)
abline(LineA)
LineA <- lm(mean_pi ~ theta)
abline(LineA)
setwd("C:\\Users\\abh00\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05")
plotData <- ("mean_pi", "theta")
plotData <- c(mean_pi, theta)
plotData
boxplot(formula = mean_pi~theta, data = plotData)
boxplot(formula = mean_pi~theta)
mean_pi <- sapply(stats, function(x) mean(x$pi))
boxplot(formula = mean_pi~theta, data = stats)
plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta")
plotData <- plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta")
LineA <- rlm(plotData)
library(MASS)
LineA <- rlm(plotData)
plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta")
LineA <- rlm(mean_pi~theta)
abline(LineA)
coalescentPlot5 <- learnPopGen::coalescent.plot(n = 5, ngen = 5, colors = NULL )
pdf("coalescentplot5.pdf", height = 4, width = 4)
plot(coalescentPlot5)
dev.off()
avg(1,1,1,2,5)
mean(1,1,1,2,5)
var(1,1,1,2,5)
meanFix <- mean(1,1,1,2,5)
var(meanFix)
coalescentPlot5
?coalescent.plot()
fixGen <- c(1,1,1,2,5)
var(fixGen)
mean(0,0,0,3,2)
meanFix <- c(1,1,1,2,5)
mean(meanFix)
meanKid <- c(0,0,0,3,2)
mean(meanKid)
varKid <- c(0,0,0,3,2)
var(varKid)
?learnPopGen
?feat_mutation
?coal_model
?coala
help(coala)
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms(t1, t2)
t1 <- read.tree(text=stats$trees[[1]][1])
t1 <- read.tree(text=stats$trees[[1]][1])
setwd("C:\\Users\\abh00\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05")
t1 <- read.tree(text=stats$trees[[1]][1])
library(coala)
library(phytools)
library(MASS)
t1 <- read.tree(text=stats$trees[[1]][1])
setwd("C:\\Users\\abh00\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05")
library(coala)
library(phytools)
library(MASS)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500,
ploidy = 2) + feat_mutation(10) +
feat_recombination(15) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1]][1])
t2 <- read.tree(text=stats$trees [[2]][1])
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms(t1, t2)
?feat_migration
?coal_model
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_selection(strenght_AA=1000, population= all,time = par_prior("theta", sample.int(100,1)) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
a
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(rate=par_prior("theta", sample.int(100,1)), symmetric=FALSE) +
feat_selection(strenght_AA=1000, population= all,time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(rate=par_prior("theta", sample.int(100,1)), symmetric=FALSE) +
feat_selection(strenght_AA=1000,time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(rate=par_prior("theta", sample.int(100,1)), symmetric=FALSE) +
feat_selection(strenght_AA=1000, population= c(5,10),time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(strenght_AA=1000, population= c(5,10),time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= c(5,10),time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(strenght_AA=1000, population= 1, 2, time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= 1, 2, time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= 1, 2, time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta"), time=par_prior("theta"))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(rate=par_prior("theta", sample.int(100,1)), symmetric=FALSE)
feat_selection(population= 1, 2, time = par_prior("alpha", sample.int(100,1))) +
feat_size_change(new_size=par_prior("beta", sample.int(100,1)), time=par_prior("gamme", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= 1, 2, time = par_prior("alpha", sample.int(100,1))) +
feat_size_change(new_size=par_prior("beta", sample.int(100,1)), time=par_prior("gamme", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
ExCrStats <- simulate(model, nsim=40)
library(coala)
library(phytools)
library(MASS)
ExCrStats <- simulate(model, nsim=40)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500,
ploidy = 2) + feat_mutation(10) +
feat_recombination(15) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
stats
ExCrStats <- simulate(model, nsim=40)
modelExCr <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= 1, 2, time = par_prior("alpha", sample.int(100,1))) +
feat_size_change(new_size=par_prior("beta", sample.int(100,1)), time=par_prior("gamme", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
ExCrStats <- simulate(modelExCr, nsim=40)
?simulate
?simulate.coalmodel
modelExCr <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= 1, 2, time = par_prior("alpha", sample.int(100,1))) +
feat_size_change(new_size=par_prior("beta", sample.int(100,1)), time=par_prior("gamme", sample.int(100,1)))+
sumstat_nucleotide_div()
ExCrStats <- simulate(modelExCr, nsim=40)
modelExCr <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= 1, 2, time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
?feat_mutation
modelExCr <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= 1, 2, time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("theta", sample.int(100,1)), time=par_prior("theta", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
modelExCr <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_mutation(5)+
feat_selection(population= 1, 2, time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("beta", sample.int(100,1)), time=par_prior("gamme", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
ExCrStats <- simulate(modelExCr, nsim=40)
modelExCr <- coal_model(sample_size = c(5,10), loci_number = 10, loci_length = 500,
ploidy = 2) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_selection(population= 1, 2, time = par_prior("theta", sample.int(100,1))) +
feat_size_change(new_size=par_prior("beta", sample.int(100,1)), time=par_prior("gamme", sample.int(100,1)))+
sumstat_trees() +
sumstat_nucleotide_div()
ExCrStats <- simulate(modelExCr, nsim=40)
modelA <- coal_model(c(4,9),15)
check_model(modelA)
feat_mutation(par_prior("theta", sample.int(100,1)))
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))
check_model(modelA)
feat_migration(0.5, 1, 2)
+
feat_migration(1.0, 2, 1)
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
check_model(modelA)
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
feat_growth(5, time=0)+
feat_growth(8, time=1)
check_model(modelA)
activate_msms(jar = NULL, java = NULL, priority = 200, download = TRUE)
activate_msms(jar = NULL, java = NULL, priority = 200, download = TRUE)
activate_msms(jar = NULL, java = NULL, priority = 200, download = TRUE)
activate_msms(jar = NULL, java = NULL, priority = 200, download = TRUE)
setwd("C:\\Users\\abh00\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05")
library(coala)
library(phytools)
library(MASS)
activate_msms(jar = NULL, java = NULL, priority = 200, download = TRUE)
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
feat_migration(0.5, 1, 2) +
feat_growth(5, time=0)+
feat_growth(8, time=1)
check_model(modelA)
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
feat_growth(5, time=0)+
feat_growth(8, time=1)+
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all")
check_model(modelA)
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
feat_growth(5, time=0)+
feat_growth(8, time=1)+
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all")+
feat_selection(strength_A = 0.2, population = 1, time = 0, locus_group = "all")
check_model(modelA)
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
feat_growth(5, time=0)+
feat_growth(8, time=1)+
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all")+
feat_selection(strength_A = 0.2, population = 1, time = 0, locus_group = "all")
sumstat_nucleotide_div()
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
feat_growth(5, time=0)+
feat_growth(8, time=1)+
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all")+
feat_selection(strength_A = 0.2, population = 1, time = 0, locus_group = "all")+
sumstat_nucleotide_div()
check_model(modelA)
modelA <- coal_model(c(4,9),15)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
feat_growth(5, time=0)+
feat_growth(8, time=1)+
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all")+
feat_selection(strength_A = 0.2, population = 1, time = 0, locus_group = "all")+
sumstat_nucleotide_div()
output <- simulate(modelA, nsim=2)
Pis <- sapply(output, function(x) x$pi)
Pis
modelA <- coal_model(c(4,9),15
check_model(modelA)
modelA <- coal_model(c(4,9),15)
check_model(modelA)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1)))
check_model(modelA)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2)
check_model(modelA)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
check_model(modelA)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0)
check_model(modelA)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1)
check_model(modelA)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1) +
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all")
check_model(modelA)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1) +
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all") +
feat_selection(strength_A = 0.2, population = 1, time = 0, locus_group = "all"
check_model(modelA)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1) +
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all") +
feat_selection(strength_A = 0.2, population = 1, time = 0, locus_group = "all"
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1) +
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all") +
feat_selection(strength_A = 0.2, population = 1, time = 0, locus_group = "all")
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1) +
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all") +
feat_selection(strength_Aa = 0.2, population = 1, time = 0, locus_group = "all")
check_model(modelA)
output <- simulate(modelA, nsim=2)
Pis <- sapply(output, function(x) x$pi)
Pis
output <- simulate(modelA, nsim= 2)
Pis <- sapply(output, function(x) x$pi)
Pis
modelA <- coal_model(c(4,9),15)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1)))
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1)
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1) +
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all")
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1) +
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all") +
feat_selection(strength_Aa = 0.2, population = 1, time = 0, locus_group = "all")
modelA <- coal_model(c(4,9),15) +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1.0, 2, 1) +
feat_growth(5, time=0) +
feat_growth(8, time=1) +
feat_selection(strength_A = 1, population = 2, time = 1, locus_group = "all") +
feat_selection(strength_Aa = 0.2, population = 1, time = 0, locus_group = "all") +
sumstat_nucleotide_div()
output <- simulate(modelA, nsim= 2)
Pis <- sapply(output, function(x) x$pi)
Pis
output <- simulate(modelA, nsim= 100)
Pis <- sapply(output, function(x) x$pi)
Pis
model3 <- coal_model(10,50)+
feat_mutation(par_prior("theta", sample.int(100,1)))+
sumstat_nucleotide_div()
stats <- simulate(model3, nsim = 40)
mean_pi <- sapply(stats, function(x) mean(x$pi))
theta <- sapply(stats, function(x) x$pars[["theta"]])
plot(mean_pi, theta, type = "p", xlab="mean_pi", ylab="theta")
LineA <- rlm(mean_pi~theta)
abline(LineA)
